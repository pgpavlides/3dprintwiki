/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ToolsImport } from './routes/tools'
import { Route as SetupElectronicsImport } from './routes/setup-electronics'
import { Route as SetupImport } from './routes/setup'
import { Route as MaterialsImport } from './routes/materials'
import { Route as HardwareImport } from './routes/hardware'
import { Route as ElectronicsImport } from './routes/electronics'
import { Route as DesignAndPostprocessingImport } from './routes/design-and-postprocessing'
import { Route as ContributorsImport } from './routes/contributors'
import { Route as ComponentsImport } from './routes/components'
import { Route as CalendarImport } from './routes/calendar'
import { Route as CalculatorImport } from './routes/calculator'
import { Route as IndexImport } from './routes/index'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as ResourcesVideoLibraryImport } from './routes/resources/video-library'
import { Route as AdminNotesImport } from './routes/admin/notes'
import { Route as AdminLoginImport } from './routes/admin/login'
import { Route as AdminContentImport } from './routes/admin/content'
import { Route as AdminChecklistImport } from './routes/admin/checklist'

// Create/Update Routes

const ToolsRoute = ToolsImport.update({
  id: '/tools',
  path: '/tools',
  getParentRoute: () => rootRoute,
} as any)

const SetupElectronicsRoute = SetupElectronicsImport.update({
  id: '/setup-electronics',
  path: '/setup-electronics',
  getParentRoute: () => rootRoute,
} as any)

const SetupRoute = SetupImport.update({
  id: '/setup',
  path: '/setup',
  getParentRoute: () => rootRoute,
} as any)

const MaterialsRoute = MaterialsImport.update({
  id: '/materials',
  path: '/materials',
  getParentRoute: () => rootRoute,
} as any)

const HardwareRoute = HardwareImport.update({
  id: '/hardware',
  path: '/hardware',
  getParentRoute: () => rootRoute,
} as any)

const ElectronicsRoute = ElectronicsImport.update({
  id: '/electronics',
  path: '/electronics',
  getParentRoute: () => rootRoute,
} as any)

const DesignAndPostprocessingRoute = DesignAndPostprocessingImport.update({
  id: '/design-and-postprocessing',
  path: '/design-and-postprocessing',
  getParentRoute: () => rootRoute,
} as any)

const ContributorsRoute = ContributorsImport.update({
  id: '/contributors',
  path: '/contributors',
  getParentRoute: () => rootRoute,
} as any)

const ComponentsRoute = ComponentsImport.update({
  id: '/components',
  path: '/components',
  getParentRoute: () => rootRoute,
} as any)

const CalendarRoute = CalendarImport.update({
  id: '/calendar',
  path: '/calendar',
  getParentRoute: () => rootRoute,
} as any)

const CalculatorRoute = CalculatorImport.update({
  id: '/calculator',
  path: '/calculator',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRoute,
} as any)

const ResourcesVideoLibraryRoute = ResourcesVideoLibraryImport.update({
  id: '/resources/video-library',
  path: '/resources/video-library',
  getParentRoute: () => rootRoute,
} as any)

const AdminNotesRoute = AdminNotesImport.update({
  id: '/admin/notes',
  path: '/admin/notes',
  getParentRoute: () => rootRoute,
} as any)

const AdminLoginRoute = AdminLoginImport.update({
  id: '/admin/login',
  path: '/admin/login',
  getParentRoute: () => rootRoute,
} as any)

const AdminContentRoute = AdminContentImport.update({
  id: '/admin/content',
  path: '/admin/content',
  getParentRoute: () => rootRoute,
} as any)

const AdminChecklistRoute = AdminChecklistImport.update({
  id: '/admin/checklist',
  path: '/admin/checklist',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/calculator': {
      id: '/calculator'
      path: '/calculator'
      fullPath: '/calculator'
      preLoaderRoute: typeof CalculatorImport
      parentRoute: typeof rootRoute
    }
    '/calendar': {
      id: '/calendar'
      path: '/calendar'
      fullPath: '/calendar'
      preLoaderRoute: typeof CalendarImport
      parentRoute: typeof rootRoute
    }
    '/components': {
      id: '/components'
      path: '/components'
      fullPath: '/components'
      preLoaderRoute: typeof ComponentsImport
      parentRoute: typeof rootRoute
    }
    '/contributors': {
      id: '/contributors'
      path: '/contributors'
      fullPath: '/contributors'
      preLoaderRoute: typeof ContributorsImport
      parentRoute: typeof rootRoute
    }
    '/design-and-postprocessing': {
      id: '/design-and-postprocessing'
      path: '/design-and-postprocessing'
      fullPath: '/design-and-postprocessing'
      preLoaderRoute: typeof DesignAndPostprocessingImport
      parentRoute: typeof rootRoute
    }
    '/electronics': {
      id: '/electronics'
      path: '/electronics'
      fullPath: '/electronics'
      preLoaderRoute: typeof ElectronicsImport
      parentRoute: typeof rootRoute
    }
    '/hardware': {
      id: '/hardware'
      path: '/hardware'
      fullPath: '/hardware'
      preLoaderRoute: typeof HardwareImport
      parentRoute: typeof rootRoute
    }
    '/materials': {
      id: '/materials'
      path: '/materials'
      fullPath: '/materials'
      preLoaderRoute: typeof MaterialsImport
      parentRoute: typeof rootRoute
    }
    '/setup': {
      id: '/setup'
      path: '/setup'
      fullPath: '/setup'
      preLoaderRoute: typeof SetupImport
      parentRoute: typeof rootRoute
    }
    '/setup-electronics': {
      id: '/setup-electronics'
      path: '/setup-electronics'
      fullPath: '/setup-electronics'
      preLoaderRoute: typeof SetupElectronicsImport
      parentRoute: typeof rootRoute
    }
    '/tools': {
      id: '/tools'
      path: '/tools'
      fullPath: '/tools'
      preLoaderRoute: typeof ToolsImport
      parentRoute: typeof rootRoute
    }
    '/admin/checklist': {
      id: '/admin/checklist'
      path: '/admin/checklist'
      fullPath: '/admin/checklist'
      preLoaderRoute: typeof AdminChecklistImport
      parentRoute: typeof rootRoute
    }
    '/admin/content': {
      id: '/admin/content'
      path: '/admin/content'
      fullPath: '/admin/content'
      preLoaderRoute: typeof AdminContentImport
      parentRoute: typeof rootRoute
    }
    '/admin/login': {
      id: '/admin/login'
      path: '/admin/login'
      fullPath: '/admin/login'
      preLoaderRoute: typeof AdminLoginImport
      parentRoute: typeof rootRoute
    }
    '/admin/notes': {
      id: '/admin/notes'
      path: '/admin/notes'
      fullPath: '/admin/notes'
      preLoaderRoute: typeof AdminNotesImport
      parentRoute: typeof rootRoute
    }
    '/resources/video-library': {
      id: '/resources/video-library'
      path: '/resources/video-library'
      fullPath: '/resources/video-library'
      preLoaderRoute: typeof ResourcesVideoLibraryImport
      parentRoute: typeof rootRoute
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/calculator': typeof CalculatorRoute
  '/calendar': typeof CalendarRoute
  '/components': typeof ComponentsRoute
  '/contributors': typeof ContributorsRoute
  '/design-and-postprocessing': typeof DesignAndPostprocessingRoute
  '/electronics': typeof ElectronicsRoute
  '/hardware': typeof HardwareRoute
  '/materials': typeof MaterialsRoute
  '/setup': typeof SetupRoute
  '/setup-electronics': typeof SetupElectronicsRoute
  '/tools': typeof ToolsRoute
  '/admin/checklist': typeof AdminChecklistRoute
  '/admin/content': typeof AdminContentRoute
  '/admin/login': typeof AdminLoginRoute
  '/admin/notes': typeof AdminNotesRoute
  '/resources/video-library': typeof ResourcesVideoLibraryRoute
  '/admin': typeof AdminIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/calculator': typeof CalculatorRoute
  '/calendar': typeof CalendarRoute
  '/components': typeof ComponentsRoute
  '/contributors': typeof ContributorsRoute
  '/design-and-postprocessing': typeof DesignAndPostprocessingRoute
  '/electronics': typeof ElectronicsRoute
  '/hardware': typeof HardwareRoute
  '/materials': typeof MaterialsRoute
  '/setup': typeof SetupRoute
  '/setup-electronics': typeof SetupElectronicsRoute
  '/tools': typeof ToolsRoute
  '/admin/checklist': typeof AdminChecklistRoute
  '/admin/content': typeof AdminContentRoute
  '/admin/login': typeof AdminLoginRoute
  '/admin/notes': typeof AdminNotesRoute
  '/resources/video-library': typeof ResourcesVideoLibraryRoute
  '/admin': typeof AdminIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/calculator': typeof CalculatorRoute
  '/calendar': typeof CalendarRoute
  '/components': typeof ComponentsRoute
  '/contributors': typeof ContributorsRoute
  '/design-and-postprocessing': typeof DesignAndPostprocessingRoute
  '/electronics': typeof ElectronicsRoute
  '/hardware': typeof HardwareRoute
  '/materials': typeof MaterialsRoute
  '/setup': typeof SetupRoute
  '/setup-electronics': typeof SetupElectronicsRoute
  '/tools': typeof ToolsRoute
  '/admin/checklist': typeof AdminChecklistRoute
  '/admin/content': typeof AdminContentRoute
  '/admin/login': typeof AdminLoginRoute
  '/admin/notes': typeof AdminNotesRoute
  '/resources/video-library': typeof ResourcesVideoLibraryRoute
  '/admin/': typeof AdminIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/calculator'
    | '/calendar'
    | '/components'
    | '/contributors'
    | '/design-and-postprocessing'
    | '/electronics'
    | '/hardware'
    | '/materials'
    | '/setup'
    | '/setup-electronics'
    | '/tools'
    | '/admin/checklist'
    | '/admin/content'
    | '/admin/login'
    | '/admin/notes'
    | '/resources/video-library'
    | '/admin'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/calculator'
    | '/calendar'
    | '/components'
    | '/contributors'
    | '/design-and-postprocessing'
    | '/electronics'
    | '/hardware'
    | '/materials'
    | '/setup'
    | '/setup-electronics'
    | '/tools'
    | '/admin/checklist'
    | '/admin/content'
    | '/admin/login'
    | '/admin/notes'
    | '/resources/video-library'
    | '/admin'
  id:
    | '__root__'
    | '/'
    | '/calculator'
    | '/calendar'
    | '/components'
    | '/contributors'
    | '/design-and-postprocessing'
    | '/electronics'
    | '/hardware'
    | '/materials'
    | '/setup'
    | '/setup-electronics'
    | '/tools'
    | '/admin/checklist'
    | '/admin/content'
    | '/admin/login'
    | '/admin/notes'
    | '/resources/video-library'
    | '/admin/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CalculatorRoute: typeof CalculatorRoute
  CalendarRoute: typeof CalendarRoute
  ComponentsRoute: typeof ComponentsRoute
  ContributorsRoute: typeof ContributorsRoute
  DesignAndPostprocessingRoute: typeof DesignAndPostprocessingRoute
  ElectronicsRoute: typeof ElectronicsRoute
  HardwareRoute: typeof HardwareRoute
  MaterialsRoute: typeof MaterialsRoute
  SetupRoute: typeof SetupRoute
  SetupElectronicsRoute: typeof SetupElectronicsRoute
  ToolsRoute: typeof ToolsRoute
  AdminChecklistRoute: typeof AdminChecklistRoute
  AdminContentRoute: typeof AdminContentRoute
  AdminLoginRoute: typeof AdminLoginRoute
  AdminNotesRoute: typeof AdminNotesRoute
  ResourcesVideoLibraryRoute: typeof ResourcesVideoLibraryRoute
  AdminIndexRoute: typeof AdminIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CalculatorRoute: CalculatorRoute,
  CalendarRoute: CalendarRoute,
  ComponentsRoute: ComponentsRoute,
  ContributorsRoute: ContributorsRoute,
  DesignAndPostprocessingRoute: DesignAndPostprocessingRoute,
  ElectronicsRoute: ElectronicsRoute,
  HardwareRoute: HardwareRoute,
  MaterialsRoute: MaterialsRoute,
  SetupRoute: SetupRoute,
  SetupElectronicsRoute: SetupElectronicsRoute,
  ToolsRoute: ToolsRoute,
  AdminChecklistRoute: AdminChecklistRoute,
  AdminContentRoute: AdminContentRoute,
  AdminLoginRoute: AdminLoginRoute,
  AdminNotesRoute: AdminNotesRoute,
  ResourcesVideoLibraryRoute: ResourcesVideoLibraryRoute,
  AdminIndexRoute: AdminIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/calculator",
        "/calendar",
        "/components",
        "/contributors",
        "/design-and-postprocessing",
        "/electronics",
        "/hardware",
        "/materials",
        "/setup",
        "/setup-electronics",
        "/tools",
        "/admin/checklist",
        "/admin/content",
        "/admin/login",
        "/admin/notes",
        "/resources/video-library",
        "/admin/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/calculator": {
      "filePath": "calculator.tsx"
    },
    "/calendar": {
      "filePath": "calendar.tsx"
    },
    "/components": {
      "filePath": "components.tsx"
    },
    "/contributors": {
      "filePath": "contributors.tsx"
    },
    "/design-and-postprocessing": {
      "filePath": "design-and-postprocessing.tsx"
    },
    "/electronics": {
      "filePath": "electronics.tsx"
    },
    "/hardware": {
      "filePath": "hardware.tsx"
    },
    "/materials": {
      "filePath": "materials.tsx"
    },
    "/setup": {
      "filePath": "setup.tsx"
    },
    "/setup-electronics": {
      "filePath": "setup-electronics.tsx"
    },
    "/tools": {
      "filePath": "tools.tsx"
    },
    "/admin/checklist": {
      "filePath": "admin/checklist.tsx"
    },
    "/admin/content": {
      "filePath": "admin/content.tsx"
    },
    "/admin/login": {
      "filePath": "admin/login.tsx"
    },
    "/admin/notes": {
      "filePath": "admin/notes.tsx"
    },
    "/resources/video-library": {
      "filePath": "resources/video-library.tsx"
    },
    "/admin/": {
      "filePath": "admin/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
